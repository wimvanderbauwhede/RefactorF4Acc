#! /bin/sh -u

#
# A simple driver for fcvs
#

# Fortran compiler name
FC_CMD="$FC -cpp -ffree-form -ffree-line-length-0 "

#FC='g77'
# option to produce executable name
EXECOPT='-o'
# run test 257 (that uses PAUSE)
EXE257=0
# do not run tests that include deleted features in Fortran 95
AVOID_DELETED_F95=0

#
# main loop
#
FM_SRCS=`ls $1`     

for file in $FM_SRCS # `ls FM???.f95`
do
  process_it=1
  #
  # If requested, do not run tests that contain features
  # deleted in Fortran 95
  #
  if [ x"${AVOID_DELETED_F95}" != x0 ]; then
    if [ `grep -c '^[^C*].....[ ]*\bASSIGN\b' ${file}` -ne 0 ]; then
      process_it=0
    elif [ `grep -c '^[^C*].....[ ]*\bPAUSE\b' ${file}` -ne 0 ]; then
      process_it=0
    elif [ x"${file}" = x'FM719.f' ]; then
      process_it=0
    fi
  fi

  basename=`basename ${file} .f95`

  # If requested, run the test
  if [ ${process_it} -eq 0 ]; then
    echo "Skip ${basename}"
  else
    result="${basename}".res
    data="${basename}".DAT

    echo "Process ${basename}"

    eval "${FC_CMD}" "${file}" "${EXECOPT}" a.out

    # FM257 tests PAUSE
    if [ x"${basename}" = xFM257 ]; then
      if [ x"${EXE257}" = x0 ]; then
        echo "Skip ${basename}"
      else
        {
         cat <<__EOT__
go



__EOT__
        } < /dev/null | \
        ./a.out  > "${result}" &
        pn=`ps | grep a.out | grep -v grep | sed 's/ *\([0-9]*\).*/\1/'`
        kill -15 "${pn}"
        kill -15 "${pn}"
        kill -15 "${pn}"
        kill -15 "${pn}"
        kill -15 "${pn}"
      fi
    elif [ -f "${data}" ]; then
      ./a.out < "${data}" > "${result}"
    else
      ./a.out > "${result}"
    fi

    rm -f a.out
  fi
done

rm -f fort.*
echo "Finished."

#
# Possible error extraction
#

#grep -n 'FAIL' *.res | grep -v '0 TESTS FAILED' | grep -v 'TEST[ ]*PASS/FAIL'
