#!/usr/bin/perl

use v5.30;
use strict;
use warnings;
our $VV=1;

use Cwd;
use Carp qw(croak);
my $wd=cwd;
if (! -d './aux') {
    die "Run this script in '.'\n";
}
# for the DOE, we need to go up to at most 6GB which is 1.5 G floats; for 2 arrays this is 750 M per array
# Assuming we go back to the original km=90, that would be about 8*1024*1024
# The original was 90*150*150, so it would be 90*(150*20)*(150*20)


# * Run the script `./aux/gen_macros_cfg_SConstruct.pl $UNROLL` to generate `macros.h` and `SConstruct` in `./src` and `rf4a_{UNROLL}` in `.`.
	# * Starts from the code in src/
	# * The file `macros.h` defines the UNROLL macro

# We go up to 32 even though 20 is likely the upper limit
for my $WM (1 .. 32) { 
    say "WM: $WM";
for my $UNROLL ( 1 .. 4) {
    say "UNROLL: $UNROLL";
    system("./aux/gen_macros_cfg_SConstruct.pl $UNROLL $WM");
    chdir "$wd/src";
    system("run_cpp.pl -o ../src_${UNROLL}_${WM}_postcpp/");

	# *  create an inlined version in `refactored-src_{UNROLL}/src_{UNROLL}_postcpp`
    chdir "$wd";
    system("refactorF4acc.pl -c ./rf4a_${UNROLL}_${WM}.cfg");
	# * ( The `rf4a_{UNROLL}.cfg` file is generated by `gen_macros_cfg_SConstruct.pl`)
    # * Generate the `SConstruct` in `refactored-src_{UNROLL}/src_{UNROLL}_postcpp` 
    system("./aux/gen_SConstruct_refactored.pl $UNROLL $WM");

    chdir "$wd/refactored-src_${UNROLL}_${WM}/src_${UNROLL}_${WM}_postcpp";
	# * create the module in `./autopar_${UNROLL}_${WM}`

    system("../../aux/run_autoparallel_compiler_GPU.sh $UNROLL $WM");
	# * patch the module file to change `get_global_id()` calls to `global_id` arguments: 
    chdir "$wd/autopar_${UNROLL}_${WM}";

    system("../aux/patch_autopar_superkernel_src.pl");
	# * NOTE: this also removes the substring 'superkernel_' because the memory reduction pass relies on a single superkernel.
	# * NOTE: it is essential to remove the temp arrays from the superkernel argument list. This is what we should use 'Purpose' for.

    chdir "$wd/patched_autopar_${UNROLL}_${WM}";
# die cwd();
    system("memory_reduction.pl -C");

    # * Inline the code:
    # 	- Generate the config file with `../aux/gen_cfg_inline.pl $UNROLL` if required
    system("../aux/gen_cfg_inline.pl $UNROLL");

    chdir "$wd/patched_autopar_${UNROLL}_${WM}/MemoryReduction";
die cwd();
    system("refactorF4acc.pl -c rf4a_inline_${UNROLL}");

    chdir "$wd/patched_autopar_${UNROLL}_${WM}/mem_reduced_inlined/Generated";
    system("../../../aux/patch_inlined_code.pl $UNROLL $WM");
    # -  final code in `patched_autopar_{UNROLL}_${WM}/mem_reduced_inlined/Generated/Patched`
    system("cp -r $wd/patched_autopar_${UNROLL}_$WM/mem_reduced_inlined/Generated/Patched $wd/unroll_${UNROLL}_${WM}")

}
}
